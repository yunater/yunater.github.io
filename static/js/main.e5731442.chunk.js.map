{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","className","글제목","누른제목","Profile","state","name","age","this","setState","onClick","changeName","bind","React","Component","App","useState","글제목변경","따봉","따봉변경","modal","modal변경","누른제목변경","입력값","입력값변경","map","글","i","onChange","e","target","value","arrayCopy","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAAe,I,YCiGf,SAASA,EAAMC,GACb,OACE,sBAAKC,UAAU,QAAf,UACE,6BAAKD,EAAME,mBAAIF,EAAMG,4BACrB,6CACA,4D,IAKAC,E,kDACJ,aAAc,IAAD,8BACX,gBACKC,MAAM,CAACC,KAAK,OAASC,IAAI,IAFnB,E,8CAIb,WACEC,KAAKC,SAAU,CAACH,KAAK,U,oBAEvB,WACE,OACE,gCACE,sEACA,6CAAME,KAAKH,MAAMC,KAAjB,yBACA,wBAAQI,QAASF,KAAKG,WAAWC,KAAKJ,MAAtC,iC,GAbcK,IAAMC,WAmBbC,EAxHf,WAAgB,IAAD,EAEIC,mBAAS,CAAC,yCAAY,uCAAU,iBAFpC,mBAERd,EAFQ,KAEJe,EAFI,OAGID,mBAAS,GAHb,mBAGRE,EAHQ,KAGJC,EAHI,OAKUH,oBAAS,GALnB,mBAKRI,EALQ,KAKDC,EALC,OAMQL,mBAAS,GANjB,mBAMRb,EANQ,KAMFmB,EANE,OAOMN,mBAAS,IAPf,mBAORO,EAPQ,KAOHC,EAPG,KA6Bb,OACE,sBAAKvB,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sDAsBAC,EAAIuB,KAAI,SAASC,EAAEC,GACjB,OAAQ,sBAAK1B,UAAU,OAAf,UACA,qBAAIS,QAAU,WAAQY,EAAOK,IAA7B,UAAoCD,EAAE,sBAAMhB,QAAU,WAAOS,EAAKD,EAAK,IAAjC,0BAAiDA,KACvF,8DACA,yBAH2BS,MAcvC,cAAC,EAAD,IAEA,sBAAK1B,UAAU,UAAf,UACE,uBAAO2B,SAAW,SAACC,GAAOL,EAAMK,EAAEC,OAAOC,UACzC,wBAAQrB,QAAU,WAChB,IAAIsB,EAAS,YAAQ9B,GACrB8B,EAAUC,QAAQV,GAClBN,EAAMe,IAHR,6BAMF,wBAAQtB,QAAS,WAAMW,GAASD,IAAhC,uCAGY,IAAVA,EACE,cAACrB,EAAD,CAAOG,qBAAKA,EAAKC,2BAAMA,IACvB,SC9EK+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e5731442.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable */\n\nimport React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  \n  let [글제목,글제목변경] =useState(['남자 코트 추천', '강남우동맛집', '별내']); \n  let [따봉, 따봉변경] = useState(0);\n\n  let [modal, modal변경] = useState(false);\n  let [누른제목, 누른제목변경] = useState(0);\n  let [입력값, 입력값변경] = useState('');\n\n  let posts='별내맛집';\n  \n  function 제목변경(){\n    var newArray= [...글제목];\n    newArray[0] = '여자 코트 추천' \n    글제목변경(newArray);\n\n  }\n  function 정렬(){\n    var newArray= [...글제목];\n    newArray = ['강남우동맛집','남자 코트 추천',  '별내']\n    글제목변경(newArray);\n\n  }\n  function 가나다(){\n    var newArray= [...글제목];\n    newArray.sort();\n    글제목변경( newArray );\n\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <div>개발 blog</div>\n      </div>\n      {/*\n      <button onClick={가나다 }>버튼</button>\n      <div className=\"list\">\n        <h3> {글제목[0]} <span onClick={ () => {따봉변경(따봉 + 1)} }>👍</span>{따봉}</h3>\n        <p>2월 17일 발행</p>\n        <hr/>\n      </div>\n      <div className=\"list\">\n        <h3>{글제목[1]}</h3>\n        <p>2월 17일 발행</p>\n        <hr/>\n      </div>\n      <div className=\"list\">\n        <h3>{글제목[2]}</h3>\n        <p>2월 17일 발행</p>\n        <hr/>\n      </div>*/}\n\n\n      {\n        글제목.map(function(글,i){\n          return  <div className=\"list\" key={i}>\n                  <h3 onClick={ () => { 누른제목변경(i)} }>{글}<span onClick={ () => {따봉변경(따봉 + 1)} }>👍</span>{따봉}</h3>\n                  <p>2월 17일 발행</p>\n                  <hr/>\n                </div>\n          })\n\n      }\n\n\n      {/*<button onClick={ () => { 누른제목변경(0)} }>버튼1</button>\n      <button onClick={ () => {누른제목변경(1)} }>버튼2</button>\n      <button onClick={ () => {누른제목변경(0)} }>버튼3</button> */}\n\n      <Profile></Profile>\n      \n      <div className=\"publish\">\n        <input onChange={ (e) => {입력값변경(e.target.value)} }/>\n        <button onClick={ () => {\n          var arrayCopy = [ ...글제목 ];\n          arrayCopy.unshift(입력값);\n          글제목변경(arrayCopy)\n        } }>저장</button>\n      </div>\n      <button onClick={()=> {modal변경(!modal)}}>열고닫기</button>\n\n      {\n        modal === true\n        ? <Modal 글제목={글제목} 누른제목={누른제목}></Modal>\n        : null\n\n      }\n    </div>\n  );\n}\n\nfunction Modal(props){\n  return(\n    <div className=\"modal\">\n      <h2>{props.글제목[props.누른제목]}</h2>\n      <p>날짜</p>\n      <p>상세내용</p>\n  </div>\n  )\n}\n\nclass Profile extends React.Component{\n  constructor(){\n    super();\n    this.state={name:'yuna' , age:30 }\n  }\n  changeName(){\n    this.setState( {name:'ddd'} )\n  }\n  render(){\n    return(\n      <div>\n        <h3>프로필입니다</h3>\n        <p>저는{this.state.name}입니다.</p>\n        <button onClick={this.changeName.bind(this) }>버튼</button>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}